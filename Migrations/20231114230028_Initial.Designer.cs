// <auto-generated />
using System;
using Biblioteca.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.Migrations
{
    [DbContext(typeof(IESContext))]
    [Migration("20231114230028_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Models.Autor", b =>
                {
                    b.Property<long?>("AutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("AutorID"));

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorID");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Biblioteca.Models.Emprestimo", b =>
                {
                    b.Property<long?>("EmprestimoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("EmprestimoID"));

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<long?>("fk_LivroID")
                        .HasColumnType("bigint");

                    b.Property<long?>("fk_UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("EmprestimoID");

                    b.HasIndex("fk_LivroID");

                    b.HasIndex("fk_UsuarioID");

                    b.ToTable("Emprestimo");
                });

            modelBuilder.Entity("Biblioteca.Models.Genero", b =>
                {
                    b.Property<long?>("GeneroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("GeneroID"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstiloNarrativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicoAlvo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroID");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Biblioteca.Models.Livro", b =>
                {
                    b.Property<long?>("LivroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("LivroID"));

                    b.Property<long?>("AnoPublicacao")
                        .HasColumnType("bigint");

                    b.Property<string>("Editora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("fk_AutorID")
                        .HasColumnType("bigint");

                    b.Property<long?>("fk_GeneroID")
                        .HasColumnType("bigint");

                    b.HasKey("LivroID");

                    b.HasIndex("fk_AutorID");

                    b.HasIndex("fk_GeneroID");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Biblioteca.Models.Usuario", b =>
                {
                    b.Property<long>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UsuarioID"));

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Biblioteca.Models.Emprestimo", b =>
                {
                    b.HasOne("Biblioteca.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("fk_LivroID");

                    b.HasOne("Biblioteca.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("fk_UsuarioID");

                    b.Navigation("Livro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Biblioteca.Models.Livro", b =>
                {
                    b.HasOne("Biblioteca.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("fk_AutorID");

                    b.HasOne("Biblioteca.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("fk_GeneroID");

                    b.Navigation("Autor");

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
